---
title: "Course Planning"
format: html
editor: visual
---

# Planning Notes for R course

Ideally, these will be re-worked in a much more systematic fashion to generate a syllabus-like document

## Course Overview:

Six two-hour sessions on Tuesday-Thursday afternoons in the second half of June (June 17, 18, 19 and June 24, 25, 26) from 3-5pm. All classes are in person (not hybrid). Office hours can be hybrid, in person, or on an as-needed basis. There is no expectation for out of class work or preparation.

The goals of the course are to give students an understanding of the fundamentals of programming and statistics. Emphasis is on repeatable, transparent, and robust analyses. The course will focus on R to teach best practices in managing data, data import and export, data cleaning, summary statistics and exploratory data analysis as well as basic how to run and interpret simple statistical analyses and generate figures for reports or publications.

Each session will have three basic components: some instructional time dedicated to lecture/discussion, some instructional time dedicated to canned coding examples/demos where students follow along and some time dedicated to "challenge" questions where students work on their own (or in groups) to apply the lessons learned to new situations/data.

All of the course materials will be available via GitHub at www.github.com/rlbaker5/McNair2025

## Lecture 1: June 16th

10 min: Intro to Rob and Sarah (10 minutes max)

15 min: Student introductions: Name, field, project?

15 min: Intro to the seminar (purpose, where to find course materials, office hours for extra help, etc)

20 min: what is computer science? how do we learn about computers and computer languages? What is the learning process of how to program. Things break and don't work. OK. Very easy to make mistakes, very hard to make irrecoverable mistakes.

15-20 min (Rob): Why we use computers: reproducibility, transparency, sharing/collaborating, and computational power (maaaaathhhh speed) publishing

10-15 min: Examples:

Quick project: -DEMO: 5 minutes: intro: follow-along, an example what what you should be able to to at the end of the course, etc 5 minutes

BREAK (10 min?)

Example problem (work this together): write a quick "hello world" function.

Challenge Problem:

Write a function that will multiply any number by 10.

## Lecture 2: June 17th

10 minutes: When is programming useful?

2 minutes: Why R (FREE! packages, functions, community of developers and helpers)

25-30 minutes: R mechanics

-   understand what a variable is

-   understand what a function is

\* data import (xlsx vs csv): differences, data loss, analyzable vs. unanalyzable data in xlsx (color yuck!)

BREAK

challenge examples?

## Lecture 3: June 25

Data handling/best practices What to do and how to treat raw data files Hit data import again Exploring/munging data: comment & document code anatomy of a dataframe: head/tail nrow/ncol how to find a specific location in a dataframe subsetting data joining data with rbind/cbind simple operations within a data frame (col1 \* col2 = col3) factors how to save a file:

also why we don't data munge in excel!

## July 02 - NO CLASS

## Lecture 4: July 09

Text manipulation (stingr, grep, etc) control structures: for, if (ifelse? while?)

## Lecture 5: July 16

```         
Statistics in brief:
Normal distributions; p-values, 95% probability, etc
(cover at a very high level - not too many details)
distribution shapes and simple transformations
(histograms? QQplots?)
```

## Lecture 6: July 23

Project: 1 is demo-like and 1 is on-your-own
